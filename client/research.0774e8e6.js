import{S as e,i as a,s as t,e as n,t as s,a as i,b as l,f as r,g as o,d as c,c as d,j as h,m,k as g,l as u,n as p,q as f,o as v}from"./client.3f080b18.js";var y=[{name:"Bayesian Deep Learning",image:"image/dummy_wide.svg",description:"Modern deep neural networks are typically overparameterized and thus under-specified by the available data.\nIn other words, deep neural networks often contain multiple solutions which can express hypotheses describing the data.\nWhile the classical training of deep neural networks aims to find a single solution, the Bayesian approach considers multiple possible solutions by performing marginalization.\nWe are studying various sub-fields involving deep neural networks from the Bayesian perspective.\n"},{name:"Meta-Learning",image:"image/research/meta-learning.png",description:"Meta-learning refers to algorithms that learn how to learn; more broadly, any algorithm that uses meta-knowledge to facilitate other learning tasks is an instance of meta-learning.\nUnlike hand-designed learning algorithms, meta-learned algorithms can directly leverage common structure or inherent knowledge extracted from multiple related tasks.\nThis is essential for human-like AI capabilities such as continuously learning or processing multimodal data.\nIn our lab, we are interested in the fundamentals of meta-learning and its applications.\nSpecifically, we develop general meta-learning algorithms that learn meta-knowledge under real-world constraints, such as in settings with limited data.\nWe also formulate domain-specific meta-learning methods for problem settings such as domain generalization, generative modeling, and Bayesian learning.\n"},{name:"Healthcare",image:"image/dummy_wide.svg",description:"Detecting cancer was doctorsâ€™ exclusive work before. Nowadays, thanks to the development of WSI(whole slide image), AI can detect cancer either.\nAS WSI is too big to fit into modern CNN architectures, it is divided into thousand of patches.\nAlso, there are only about 1000 WSI labels per dataset which easily provokes an over-fitting problem.\nOur lab focuses on multiple instance learning, where only slide-level labels are given.\nWe are trying to make pseudo-WSI labels by using information between patches. Furthermore, we are interested in self-supervised learning to extract adequate features for WSI.\n"}];function w(e,a,t){const n=e.slice();return n[0]=a[t],n}function b(e){let a,t,f,v,y,w,b,k,I,S,W=e[0].name+"",x=e[0].description+"";return{c(){a=n("div"),t=n("h2"),f=s(W),v=i(),y=n("p"),w=s(x),b=i(),k=n("img"),S=i(),this.h()},l(e){a=l(e,"DIV",{});var n=r(a);t=l(n,"H2",{class:!0});var s=r(t);f=o(s,W),s.forEach(c),v=d(n),y=l(n,"P",{class:!0});var i=r(y);w=o(i,x),i.forEach(c),b=d(n),k=l(n,"IMG",{src:!0,alt:!0,class:!0}),S=d(n),n.forEach(c),this.h()},h(){h(t,"class","svelte-18ll25p"),h(y,"class","svelte-18ll25p"),m(k.src,I=e[0].image||"image/dummy_wide.svg")||h(k,"src",I),h(k,"alt","..."),h(k,"class","svelte-18ll25p")},m(e,n){g(e,a,n),u(a,t),u(t,f),u(a,v),u(a,y),u(y,w),u(a,b),u(a,k),u(a,S)},p:p,d(e){e&&c(a)}}}function k(e){let a,t,s,o=y,m=[];for(let a=0;a<o.length;a+=1)m[a]=b(w(e,o,a));return{c(){a=i(),t=n("main"),s=n("div");for(let e=0;e<m.length;e+=1)m[e].c();this.h()},l(e){f('[data-svelte="svelte-2sbtyy"]',document.head).forEach(c),a=d(e),t=l(e,"MAIN",{});var n=r(t);s=l(n,"DIV",{class:!0});var i=r(s);for(let e=0;e<m.length;e+=1)m[e].l(i);i.forEach(c),n.forEach(c),this.h()},h(){document.title="SIML - Research",h(s,"class","content svelte-18ll25p")},m(e,n){g(e,a,n),g(e,t,n),u(t,s);for(let e=0;e<m.length;e+=1)m[e].m(s,null)},p(e,[a]){if(0&a){let t;for(o=y,t=0;t<o.length;t+=1){const n=w(e,o,t);m[t]?m[t].p(n,a):(m[t]=b(n),m[t].c(),m[t].m(s,null))}for(;t<m.length;t+=1)m[t].d(1);m.length=o.length}},i:p,o:p,d(e){e&&c(a),e&&c(t),v(m,e)}}}class I extends e{constructor(e){super(),a(this,e,null,k,t,{})}}export{I as default};
